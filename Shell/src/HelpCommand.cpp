//
// HelpCommand.cpp
//
// $Id: //poco/1.4/Shell/src/HelpCommand.cpp#1 $
//
// Library: Shell
// Package: Shell
// Module:  HelpCommand
//
// Copyright (c) 2009-2013, Applied Informatics Software Engineering GmbH.
// and Contributors.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//


#include "Poco/Shell/HelpCommand.h"
#include "Poco/Shell/CommandProcessor.h"
#include "Poco/String.h"


namespace Poco {
namespace Shell {


HelpCommand::HelpCommand(CommandProcessor& commandProcessor):
	_commandProcessor(commandProcessor)
{
}


HelpCommand::~HelpCommand()
{
}


int HelpCommand::execute(Session& session, const std::vector<std::string>& args, std::ostream& ostr)
{
	std::string header(/*TODO properties().getString("help.header", "")*/"");
	if (!header.empty()) ostr << header << '\n';
	
	std::vector<std::string> commands;
	_commandProcessor.listCommands(commands);
	for (std::vector<std::string>::const_iterator it = commands.begin(); it != commands.end(); ++it)
	{
		ostr << "  " << *it;
		std::set<std::string> aliases;
		_commandProcessor.aliases(*it, aliases);
		if (!aliases.empty())
		{
			ostr << " (" << Poco::cat(std::string(", "), aliases.begin(), aliases.end()) << ")";
		}
		ostr << '\n';
	}
	ostr << '\n';
	std::string footer(/*TODO properties().getString("help.footer", "")*/"");
	if (!footer.empty()) ostr << footer << '\n';
	
	return Command::STATUS_OK;
}


} } // namespace Poco::Shell
