DONE
====
* All changes are protected by defines POCO_ENABLE_CPP11 and POCO_ENABLE_CPP14
* Replace std::auto_ptr with std::unique_ptr
* SharedPtr inherits from std::shared_ptr
* AtomicCounter inherits from std::atomic_int
* Array inherits from std::array
* Move semantics for SharedPtr, AutoPtr, Buffer, Message, JSON::Object and JSON::Array
* Use <cstdint> for int types
* Clock and Timestamp uses <chrono>
* Use std::mutex* for Mutex instead of platform specific
* Use std::condition_variable for Event instead of platform specific
* Use std::thread for Thread instead of platform specific
* Use template variadic for Poco::format and Logger::* instead of lots of overloads
* StdFunctionDelegate for basic events

WIP
===
* std::tuple instead of Tuple: std::tuple doesn't accept partial initialization
* Semaphore: simulated with mutex and condition variable, but platform specific should be better
* RWLock: std::shared_timed_mutex has separate read and write unlock, but RWLock uses unlock for both
* Use <random> for Poco/Random, but it supports 4 different modes that must be mapped

PROBLEMS
========
* std::thread doesn`t support priority setting
