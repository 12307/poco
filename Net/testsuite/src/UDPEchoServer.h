//
// UDPEchoServer.h
//
// $Id: //poco/1.1.0/Net/testsuite/src/UDPEchoServer.h#2 $
//
// Definition of the UDPEchoServer class.
//
// Copyright (c) 2005-2006, Applied Informatics Software Engineering GmbH.
// and Contributors.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//


#ifndef UDPEchoServer_INCLUDED
#define UDPEchoServer_INCLUDED


#ifndef Net_Net_INCLUDED
#include "Net/Net.h"
#endif
#ifndef Net_DatagramSocket_INCLUDED
#include "Net/DatagramSocket.h"
#endif
#ifndef Net_SocketAddress_INCLUDED
#include "Net/SocketAddress.h"
#endif
#ifndef Net_Foundation_Thread_INCLUDED
#include "Foundation/Thread.h"
#endif
#ifndef Net_Foundation_Event_INCLUDED
#include "Foundation/Event.h"
#endif


class UDPEchoServer: public Foundation::Runnable
	/// A simple sequential UDP echo server.
{
public:
	UDPEchoServer();
		/// Creates the UDPEchoServer.

	UDPEchoServer(const Net::SocketAddress& sa);
		/// Creates the UDPEchoServer and binds it to
		/// the given address.

	~UDPEchoServer();
		/// Destroys the UDPEchoServer.

	Foundation::UInt16 port() const;
		/// Returns the port the echo server is
		/// listening on.
		
	Net::SocketAddress address() const;
		/// Returns the address of the server.	
		
	void run();
		/// Does the work.
		
private:
	Net::DatagramSocket _socket;
	Foundation::Thread  _thread;
	Foundation::Event   _ready;
	bool                _stop;
};


#endif // UDPEchoServer_INCLUDED
