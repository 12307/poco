//
// SortedTableModel.cpp
//
// $Id: //poco/Main/WebWidgets/src/SortedTableModel.cpp#3 $
//
// Library: WebWidgets
// Package: Views
// Module:  SortedTableModel
//
// Copyright (c) 2007, Applied Informatics Software Engineering GmbH.
// and Contributors.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//


#include "Poco/WebWidgets/SortedTableModel.h"


namespace Poco {
namespace WebWidgets {


SortedTableModel::SortedTableModel(TableModel::Ptr pModel, std::size_t col, bool sortAscending):
	TableModel(pModel->getColumnCount()),
	_pUnsorted(pModel),
	_sortCol(col),
	_sortAscending(sortAscending)
{
}


SortedTableModel::~SortedTableModel()
{
}


const Poco::Any& SortedTableModel::getValue(std::size_t row, std::size_t col) const
{
	throw Poco::NotImplementedException();
}


std::size_t SortedTableModel::getRowCount() const
{
	throw Poco::NotImplementedException();
}


void SortedTableModel::setValue(const Poco::Any& val, std::size_t row, std::size_t col)
{
	throw Poco::NotImplementedException();
}


void SortedTableModel::deleteRow(std::size_t row)
{
	throw Poco::NotImplementedException();
}

	
void SortedTableModel::clear()
{
	throw Poco::NotImplementedException();
}


void SortedTableModel::sort(std::size_t col, bool sortAscending)
{
	throw Poco::NotImplementedException();
}


} } // namespace Poco::WebWidgets
