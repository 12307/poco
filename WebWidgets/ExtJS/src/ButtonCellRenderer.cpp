//
// ButtonCellRenderer.cpp
//
// $Id: //poco/Main/WebWidgets/ExtJS/src/ButtonCellRenderer.cpp#8 $
//
// Library: ExtJS
// Package: Core
// Module:  ButtonCellRenderer
//
// Copyright (c) 2007, Applied Informatics Software Engineering GmbH.
// and Contributors.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//


#include "Poco/WebWidgets/ExtJS/ButtonCellRenderer.h"
#include "Poco/WebWidgets/ExtJS/FormRenderer.h"
#include "Poco/WebWidgets/ExtJS/Utility.h"
#include "Poco/WebWidgets/ButtonCell.h"


namespace Poco {
namespace WebWidgets {
namespace ExtJS {


ButtonCellRenderer::ButtonCellRenderer()
{
}


ButtonCellRenderer::~ButtonCellRenderer()
{
}


void ButtonCellRenderer::renderHead(const Renderable* pRenderable, const RenderContext& context, std::ostream& ostr)
{
	poco_assert_dbg (pRenderable != 0);
	const ButtonCell* pButtonCell = static_cast<const Poco::WebWidgets::ButtonCell*>(pRenderable);
	std::string content = "'" + Utility::safe(pButtonCell->getString()) + "'";
	ButtonCellRenderer::renderButton(pButtonCell, content, true, false,ostr);
}


void ButtonCellRenderer::renderCell(const Cell* pCell, const RenderContext& context, std::ostream& ostr)
{
	poco_assert_dbg (pCell != 0);
	const ButtonCell* pButtonCell = static_cast<const Poco::WebWidgets::ButtonCell*>(pCell);

	// is now a variable name
	ButtonCellRenderer::renderButton(pButtonCell, "val", false, false, ostr);
}


void ButtonCellRenderer::renderProperties(const ButtonCell* pButtonCell, const std::string& content, bool writeId, bool submitButton, std::ostream& ostr, bool showText)
{
	if (showText && !content.empty())
		ostr << "text:" << content << ",";
	if (submitButton)
	{
		ostr << "type:'submit',";
		Form::Ptr pForm = Utility::insideForm(pButtonCell);
		//ostr << "handler: function(){Ext.getCmp('" << pForm->id() << "').getForm().submit({url:'" << pForm->getURI().toString() << "',waitMsg:'Loading'});},";
		ostr << "handler: function(){Ext.getCmp('" << pForm->id() << "').getForm().submit();},";
	}
	Utility::writeCellProperties(pButtonCell, ostr, writeId);
	std::string toolTip(pButtonCell->getToolTip());
	if (!toolTip.empty())
		ostr << ",tooltip:'" << Utility::safe(toolTip) << "'";
}


void ButtonCellRenderer::renderButton(const ButtonCell* pCell, const std::string& content, bool writeId, bool submitButton, std::ostream& ostr, bool showText)
{
	ostr << "new Ext.Button({";
	ButtonCellRenderer::renderProperties(pCell, content, writeId, submitButton, ostr);
	ostr << "})";
}


void ButtonCellRenderer::writeConfigData(const Cell* pCell, const RenderContext& context, std::ostream& ostr)
{
	ostr << "'" << Utility::safe(pCell->getString()) << "'";
}


} } } // namespace Poco::WebWidgets::ExtJS
